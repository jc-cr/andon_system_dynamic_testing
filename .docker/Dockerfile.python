FROM ubuntu:20.04 AS base

# Set noninteractive installation to avoid prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install Python and basic dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    apt-transport-https \
    apt-utils \
    curl \
    lsb-release \
    gnupg \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic links for Python if they don't exist
RUN if [ ! -e /usr/bin/python ]; then ln -s /usr/bin/python3 /usr/bin/python; fi && \
    if [ ! -e /usr/bin/pip ]; then ln -s /usr/bin/pip3 /usr/bin/pip; fi

# Second stage: Install RealSense SDK
FROM base AS realsense

# Install RealSense dependencies
RUN apt-get update && apt-get install -y \
    udev \
    libssl-dev \
    libusb-1.0-0-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libglfw3-dev \
    && rm -rf /var/lib/apt/lists/*

# Add the RealSense repository
RUN mkdir -p /etc/apt/keyrings && \
    curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | tee /etc/apt/keyrings/librealsense.pgp > /dev/null && \
    echo "deb [signed-by=/etc/apt/keyrings/librealsense.pgp] https://librealsense.intel.com/Debian/apt-repo focal main" | \
    tee /etc/apt/sources.list.d/librealsense.list

# Update and install RealSense packages
RUN apt-get update && apt-get install -y \
    librealsense2-dkms \
    librealsense2-utils \
    librealsense2-dev \
    librealsense2-dbg \
    && rm -rf /var/lib/apt/lists/*

# Final stage: Add Python libraries and finalize
FROM realsense AS python

# Install Python wrapper for RealSense
RUN pip install --no-cache-dir pyrealsense2 numpy opencv-python

# Create a working directory
WORKDIR /app

# Set environment variables to fix GL issues
ENV DISPLAY=:0
ENV LIBGL_ALWAYS_SOFTWARE=1
ENV MESA_GL_VERSION_OVERRIDE=3.3
ENV __GLX_VENDOR_LIBRARY_NAME=mesa
ENV LIBGL_ALWAYS_INDIRECT=0
ENV QT_X11_NO_MITSHM=1

# Default command
CMD ["bash"]
